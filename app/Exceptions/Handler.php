<?php

namespace App\Exceptions;

use App\Support\Telegram\TelegramService;
use Illuminate\Auth\AuthenticationException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Support\Str;
use Illuminate\Validation\ValidationException;
use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Symfony\Component\Routing\Exception\MethodNotAllowedException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array<int, class-string<Throwable>>
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {

        $this->reportable(function (Throwable $e) {
        });
    }

    public function render($request, Throwable $e)
    {
        if($e instanceof ValidationException || $e instanceof AuthenticationException || $e instanceof NotFoundHttpException || $e instanceof MethodNotAllowedException || $e instanceof MethodNotAllowedHttpException){
            if($e instanceof AuthenticationException){
                if (Str::contains($request->path(), 'api')) {
                    return response([
                        'result' => false,
                        'message' => 'Vui lòng đăng nhập',
                    ]);
                }
            }
        }else{
//            TelegramService::sendMessage('[Vincpi]  Message: ' . $e->getMessage() . '. File: ' . $e->getFile() . '. Line: ' . $e->getLine(). 'URL: ' . url()->full() . '. Data: ' . json_encode($request->all())  . '. IP : ' . $request->ip());
        }
        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
